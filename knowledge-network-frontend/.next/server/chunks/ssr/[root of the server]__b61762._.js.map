{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevinpan/projects/knowledge_graph/knowledge-network-frontend/src/app/components/InputForm.js"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\n\nconst InputForm = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const router = useRouter();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/generate_graph\", {\n        user_input: userInput,\n      });\n\n      // Redirect to the graph page with the response data\n      router.push({\n        pathname: \"/graph\",\n        query: { data: JSON.stringify(response.data) },\n      });\n    } catch (error) {\n      console.error(\"Error generating graph:\", error);\n      alert(\"Failed to generate the graph. Please try again.\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"userInput\">Enter text (comma-separated):</label>\n      <textarea\n        id=\"userInput\"\n        rows=\"4\"\n        cols=\"50\"\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n      ></textarea>\n      <br />\n      <button type=\"submit\">Generate Knowledge Network</button>\n    </form>\n  );\n};\n\nexport default InputForm;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,MAAM,YAAY;IAChB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,4CAA4C;gBAC5E,YAAY;YACd;YAEA,oDAAoD;YACpD,OAAO,IAAI,CAAC;gBACV,UAAU;gBACV,OAAO;oBAAE,MAAM,KAAK,SAAS,CAAC,SAAS,IAAI;gBAAE;YAC/C;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAK,UAAU;;0BACd,8OAAC;gBAAM,SAAQ;0BAAY;;;;;;0BAC3B,8OAAC;gBACC,IAAG;gBACH,MAAK;gBACL,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;0BAE9C,8OAAC;;;;;0BACD,8OAAC;gBAAO,MAAK;0BAAS;;;;;;;;;;;;AAG5B;uCAEe"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}