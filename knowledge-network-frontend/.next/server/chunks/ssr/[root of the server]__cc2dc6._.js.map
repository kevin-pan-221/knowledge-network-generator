{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevinpan/projects/knowledge_graph/knowledge-network-frontend/src/app/components/KnowledgeGraph.js"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nconst KnowledgeGraph = ({ graphData, resetGraph, selectedNode }) => {\n  const svgRef = useRef();\n  const zoomRef = useRef(); // Store zoom reference across renders\n\n  useEffect(() => {\n    if (!graphData) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove(); // Clear previous graph\n\n    const { nodes, links } = graphData;\n\n    const width = 1200; // Increased canvas width\n    const height = 800; // Increased canvas height\n\n    // Initialize zoom behavior\n    const zoom = d3.zoom().on(\"zoom\", (event) => {\n      svgGroup.attr(\"transform\", event.transform);\n    });\n    zoomRef.current = zoom; // Store zoom reference\n\n    svg.call(zoom).on(\"dblclick.zoom\", null); // Disable double-click zoom\n\n    const svgGroup = svg.append(\"g\");\n\n    // Initialize force simulation\n    const simulation = d3\n      .forceSimulation(nodes)\n      .force(\n        \"link\",\n        d3\n          .forceLink(links)\n          .id((d) => d.id)\n          .distance((d) => {\n            const maxDistance = 200; // Reduced maximum distance\n            const minDistance = 50;  // Increased minimum distance\n            const weight = d.weight;\n            return minDistance + (maxDistance - minDistance) * (1 - weight); // Linear scaling\n          })\n      )\n      .force(\"charge\", d3.forceManyBody().strength(-100)) // Lower node repulsion\n      .force(\"x\", d3.forceX(width / 2).strength(0.02)) // Center horizontally\n      .force(\"y\", d3.forceY(height / 2).strength(0.02)) // Center vertically\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      .alphaDecay(0.08); // Faster stabilization\n\n    const link = svgGroup\n      .append(\"g\")\n      .selectAll(\"line\")\n      .data(links)\n      .enter()\n      .append(\"line\")\n      .style(\"stroke\", (d) => d3.interpolateBlues(Math.pow(d.weight, 2)))\n      .style(\"stroke-width\", 2);\n\n    const node = svgGroup\n      .append(\"g\")\n      .selectAll(\"circle\")\n      .data(nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"r\", 12) // Slightly larger nodes\n      .style(\"fill\", \"skyblue\")\n      .call(\n        d3\n          .drag()\n          .on(\"start\", (event, d) => {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n          })\n          .on(\"drag\", (event, d) => {\n            d.fx = event.x;\n            d.fy = event.y;\n          })\n          .on(\"end\", (event, d) => {\n            if (!event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n          })\n      );\n\n    const label = svgGroup\n      .append(\"g\")\n      .selectAll(\"text\")\n      .data(nodes)\n      .enter()\n      .append(\"text\")\n      .attr(\"dx\", 14)\n      .attr(\"dy\", 4)\n      .text((d) => d.id);\n\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", (d) => d.source.x)\n        .attr(\"y1\", (d) => d.source.y)\n        .attr(\"x2\", (d) => d.target.x)\n        .attr(\"y2\", (d) => d.target.y);\n\n      node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n\n      label.attr(\"x\", (d) => d.x).attr(\"y\", (d) => d.y);\n    });\n\n    simulation.on(\"end\", () => {\n      simulation.alphaTarget(0); // Ensure forces stop after stabilization\n    });\n\n    const zoomToNode = (nodeId) => {\n      if (!nodeId) {\n        // Reset fade and zoom\n        node.style(\"opacity\", 1);\n        link.style(\"opacity\", 1);\n        svg.transition().duration(500).call(zoom.transform, d3.zoomIdentity);\n        return;\n      }\n\n      const targetNode = nodes.find((n) => n.id === nodeId);\n      if (!targetNode) return;\n\n      // Fade unrelated nodes and links\n      const connectedNodes = new Set(\n        links\n          .filter((l) => l.source.id === nodeId || l.target.id === nodeId)\n          .flatMap((l) => [l.source.id, l.target.id])\n      );\n\n      node.style(\"opacity\", (d) => (connectedNodes.has(d.id) ? 1 : 0.2));\n      link.style(\"opacity\", (l) => (l.source.id === nodeId || l.target.id === nodeId ? 1 : 0.2));\n\n      // Zoom to node position\n      const scale = 2; // Adjust zoom level\n      svg.transition()\n        .duration(500)\n        .call(\n          zoom.transform,\n          d3.zoomIdentity\n            .translate(width / 2, height / 2)\n            .scale(scale)\n            .translate(-targetNode.x, -targetNode.y)\n        );\n    };\n\n    if (selectedNode) zoomToNode(selectedNode);\n  }, [graphData, resetGraph, selectedNode]);\n\n  return <svg ref={svgRef} width={1200} height={800} style={{ border: \"1px solid #ddd\" }}></svg>;\n};\n\nexport default KnowledgeGraph;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevinpan/projects/knowledge_graph/knowledge-network-frontend/src/app/components/NodeExplorer.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Box, TextField, Typography, List, ListItem, ListItemText, IconButton } from \"@mui/material\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\nconst NodeExplorer = ({ graphData, selectedNode, setSelectedNode }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const getAllNodes = () => {\n    if (!graphData || !graphData.nodes) return [];\n    return graphData.nodes.map((node) => node.id);\n  };\n\n  const getTopClosestNodes = () => {\n    if (!graphData || !graphData.links || !selectedNode) return [];\n\n    const uniqueLinks = new Map();\n\n    graphData.links.forEach((link) => {\n      const source = typeof link.source === \"string\" ? link.source : link.source.id;\n      const target = typeof link.target === \"string\" ? link.target : link.target.id;\n\n      const key = [source, target].sort().join(\"-\");\n      if (!uniqueLinks.has(key)) {\n        uniqueLinks.set(key, { source, target, weight: link.weight });\n      }\n    });\n\n    return Array.from(uniqueLinks.values())\n      .filter((link) => link.source === selectedNode || link.target === selectedNode)\n      .sort((a, b) => b.weight - a.weight)\n      .slice(0, 10);\n  };\n\n  const nodesToDisplay = selectedNode ? getTopClosestNodes() : getAllNodes();\n\n  return (\n    <Box\n      sx={{\n        width: \"25%\",\n        padding: \"20px\",\n        borderRight: \"1px solid #ddd\",\n        overflowY: \"auto\",\n        backgroundColor: \"#f9f9f9\",\n      }}\n    >\n      <Typography variant=\"h6\" gutterBottom>\n        Node Explorer\n      </Typography>\n      <TextField\n        label=\"Search Nodes\"\n        variant=\"outlined\"\n        fullWidth\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        sx={{ marginBottom: \"20px\" }}\n      />\n      <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n        <Typography variant=\"body1\" gutterBottom>\n          {selectedNode\n            ? `Closest Nodes to \"${selectedNode}\"`\n            : \"All Nodes (Select a root node)\"}\n        </Typography>\n        {selectedNode && (\n          <IconButton\n            size=\"small\"\n            onClick={() => setSelectedNode(null)} \n            sx={{ marginLeft: \"10px\" }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        )}\n      </Box>\n      <List>\n        {nodesToDisplay\n          .filter((item) => {\n            const name = selectedNode\n              ? item.source === selectedNode\n                ? item.target\n                : item.source\n              : item;\n            return name.toLowerCase().includes(searchTerm.toLowerCase());\n          })\n          .map((item, index) => {\n            const displayName = selectedNode\n              ? item.source === selectedNode\n                ? item.target\n                : item.source\n              : item;\n\n            return (\n              <ListItem\n                key={index}\n                button={true.toString()} \n                onClick={() => setSelectedNode(displayName)}\n              >\n                <ListItemText\n                  primary={\n                    selectedNode\n                      ? `${displayName} (${item.weight.toFixed(2)})`\n                      : displayName\n                  }\n                />\n              </ListItem>\n            );\n          })}\n      </List>\n    </Box>\n  );\n};\n\nexport default NodeExplorer;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///Users/kevinpan/projects/knowledge_graph/knowledge-network-frontend/src/app/page.js"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport KnowledgeGraph from \"./components/KnowledgeGraph\";\nimport NodeExplorer from \"./components/NodeExplorer\";\nimport { Box, TextField, Button, Typography, Slider } from \"@mui/material\";\n\nconst Home = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [graphData, setGraphData] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [threshold, setThreshold] = useState(0.2); // Default threshold\n  const [resetGraph, setResetGraph] = useState(false); // Trigger for recentering graph\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/generate_graph\", {\n        user_input: userInput,\n      });\n\n      const links = response.data.links;\n\n      // Derive unique nodes from the links\n      const uniqueNodes = Array.from(\n        new Set(\n          links.flatMap((link) => [link.source, link.target]) // Extract unique source and target\n        )\n      ).map((id) => ({ id })); // Create node objects with an `id` field\n\n      setGraphData({ nodes: uniqueNodes, links });\n      setSelectedNode(null); // Reset selection when a new graph is generated\n    } catch (error) {\n      console.error(\"Error generating graph:\", error);\n      alert(\"Failed to generate the graph. Please try again.\");\n    }\n  };\n\n  // Handle threshold slider change\n  const handleThresholdChange = (event, newValue) => {\n    setThreshold(newValue);\n  };\n\n  // Filter links based on the threshold\n  const filteredGraphData = graphData\n    ? {\n        nodes: graphData.nodes,\n        links: graphData.links.filter((link) => link.weight >= threshold),\n      }\n    : null;\n\n  // Trigger recentering of the graph\n  const handleRecenter = () => {\n    setResetGraph(true);\n    setTimeout(() => setResetGraph(false), 100); // Reset the trigger\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", height: \"100vh\", width: \"100vw\" }}>\n      {/* Sidebar */}\n      <NodeExplorer\n        graphData={filteredGraphData}\n        selectedNode={selectedNode}\n        setSelectedNode={setSelectedNode}\n        sx={{\n          width: \"20%\",\n          minWidth: \"300px\",\n          borderRight: \"1px solid #ddd\",\n          overflowY: \"auto\",\n        }}\n      />\n\n      {/* Main Content */}\n      <Box\n        sx={{\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          padding: \"20px\",\n        }}\n      >\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Medical Knowledge Network Generator\n        </Typography>\n\n        {/* Threshold Slider */}\n        <Box sx={{ width: \"80%\", marginBottom: \"20px\" }}>\n          <Typography variant=\"body1\" gutterBottom>\n            Set Threshold for Linking Nodes: {threshold.toFixed(2)}\n          </Typography>\n          <Slider\n            value={threshold}\n            min={0}\n            max={1}\n            step={0.01}\n            onChange={handleThresholdChange}\n            valueLabelDisplay=\"auto\"\n          />\n        </Box>\n\n        {/* Recenter Button */}\n        <Box sx={{ marginBottom: \"20px\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={handleRecenter}\n          >\n            Recenter Graph\n          </Button>\n        </Box>\n\n        <Box\n          sx={{\n            marginBottom: \"20px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            border: \"2px solid #3f51b5\",\n            width: \"1000px\", // Increased graph container width\n            height: \"800px\", // Increased graph container height\n          }}\n        >\n          {filteredGraphData ? (\n            <KnowledgeGraph graphData={filteredGraphData} resetGraph={resetGraph} />\n          ) : (\n            <Typography variant=\"body1\">Enter data below to generate a graph</Typography>\n          )}\n        </Box>\n\n        {/* Input Form */}\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          sx={{\n            width: \"80%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"20px\",\n          }}\n        >\n          <TextField\n            id=\"userInput\"\n            label=\"Enter text (comma-separated)\"\n            variant=\"outlined\"\n            multiline\n            rows={4}\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            fullWidth\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n            Generate Knowledge Network\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}